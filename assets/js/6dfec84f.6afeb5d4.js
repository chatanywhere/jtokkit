"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[258],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||c[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Introduction",sidebar_position:1,slug:"/getting-started/"},i=void 0,s={unversionedId:"getting-started/intro",id:"getting-started/intro",title:"Introduction",description:"JTokkit is a fast and efficient tokenizer designed for use in natural language processing tasks using the OpenAI models. It provides an easy-to-use interface for tokenizing input text, for example for counting required tokens in preparation of requests to the gpt-3.5-turbo model. This library resulted out of the need to have similar capacities in the JVM ecosystem as the library tiktoken provides for Python.",source:"@site/docs/getting-started/intro.md",sourceDirName:"getting-started",slug:"/getting-started/",permalink:"/docs/getting-started/",draft:!1,editUrl:"https://github.com/knuddelsgmbh/jtokkit/docs/docs/getting-started/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1,slug:"/getting-started/"},sidebar:"gettingStarted",next:{title:"Usage",permalink:"/docs/getting-started/usage"}},l={},p=[{value:"Features",id:"features",level:2},{value:"Performance",id:"performance",level:2},{value:"Installation",id:"installation",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"JTokkit is a fast and efficient tokenizer designed for use in natural language processing tasks using the OpenAI models. It provides an easy-to-use interface for tokenizing input text, for example for counting required tokens in preparation of requests to the ",(0,a.kt)("inlineCode",{parentName:"p"},"gpt-3.5-turbo")," model. This library resulted out of the need to have similar capacities in the JVM ecosystem as the library ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/openai/tiktoken"},"tiktoken")," provides for Python."),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("p",null,"\u2705 Implements encoding and decoding via ",(0,a.kt)("inlineCode",{parentName:"p"},"r50k_base"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"p50k_base"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"p50k_edit")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cl100k_base")),(0,a.kt)("p",null,"\u2705 Easy-to-use API"),(0,a.kt)("p",null,"\u2705 Easy extensibility for custom encoding algorithms"),(0,a.kt)("p",null,"\u2705 ",(0,a.kt)("strong",{parentName:"p"},"Zero")," Dependencies"),(0,a.kt)("p",null,"\u2705 Supports Java 8 and above"),(0,a.kt)("p",null,"\u2705 Fast and efficient performance"),(0,a.kt)("h2",{id:"performance"},"Performance"),(0,a.kt)("p",null,"JTokkit reaches 2-3 times the throughput of a comparable tokenizer. Take a look in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/knuddelsgmbh/jtokkit/tree/main/benchmark"},"benchmarks")," for more details."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"You can install JTokkit by adding the following dependency to your Maven project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.knuddels</groupId>\n    <artifactId>jtokkit</artifactId>\n    <version>0.6.0</version>\n</dependency>\n")),(0,a.kt)("p",null,"Or alternatively using Gradle:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'com.knuddels:jtokkit:0.6.0'\n}\n")),(0,a.kt)("p",null,"Note that the intended targets of the library are servers. Previous support of Android was incidental. Since ",(0,a.kt)("inlineCode",{parentName:"p"},"0.5.1"),", the library uses a feature that is not supported by all Android Java Runtimes. You can still use ",(0,a.kt)("inlineCode",{parentName:"p"},"0.5.0")," on these platforms. I may introduce multi-release builds to tackle this issue sometime in the future, but as of now there is no timeline for when that will happen."))}c.isMDXComponent=!0}}]);